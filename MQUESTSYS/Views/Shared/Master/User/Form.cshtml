@using MPL.MVC;
@using MQUESTSYS.Models.Master;
@using MQUESTSYS.Util;
@model UserModel
@{
    var mode = (UIMode)ViewBag.Mode;

    var ddlRole = Util.GetDropDownOptions(ViewBag.RoleList as IEnumerable<RoleModel>, "Name", "ID");

    var passwordEditor = "<tr valign=\"top\"><td>Password</td><td>:</td><td><input id='txtPassword' name='Password' value='" + Model.Password + "'  type='password'/></td></tr>";
    var confirmPasswordEditor = "<tr valign=\"top\"><td>Confirm Password</td><td>:</td><td><input id='txtConfirmPassword' name='ConfirmPassword' value='" + Model.ConfirmPassword + "'  type='password'/></td></tr>";

    var yesNoRadio = new List<RadioOption>()
    {
        new RadioOption(){ Value = true,Text = "Aktif", ReadOnly = mode == UIMode.Detail},
        new RadioOption(){ Value = false,Text = "Tidak Aktif", ReadOnly = mode == UIMode.Detail},
    };

    var formFields = new List<IFormField>()
    {
        Html.TextBoxFieldObjFor(p=>p.UserID,"User ID", delegate(FormField f){
            f.UpdateFieldType = FormFieldType.Label;
            f.GenerateHiddenField = true;
        }),
        
        Html.FullRowFormFieldObj(passwordEditor,passwordEditor,""),
        
        Html.FullRowFormFieldObj(confirmPasswordEditor,confirmPasswordEditor,""),
        
        Html.DropDownFieldObjFor(p=>p.RoleID,"Tipe", ddlRole),
        Html.LabelFieldObjFor(p=>p.RoleName,"Tipe",delegate(FormField f){
            f.CreateFieldType = f.UpdateFieldType = FormFieldType.None;
        }),
        Html.RadioButtonFieldObjFor(p=>p.IsActive,"Status", yesNoRadio),
    };

    var form = new Form();
    form.Fields = formFields;

}
@Html.MasterForm(form, Model, mode, "User", "UserID", delegate(MasterFormHelper<UserModel> helper)
{
    if (mode == UIMode.Detail)
    {
        if (!Convert.ToBoolean(ViewBag.AllowCreate))
        {
            helper.CreateAnotherButton.Visible = false;
        }

        if (!Convert.ToBoolean(ViewBag.AllowEdit))
        {
            helper.EditButton.Visible = false;
        }

        helper.DeleteButton.Visible = false;
    }
})
